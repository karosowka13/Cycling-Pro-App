{"ast":null,"code":"var _jsxFileName = \"/media/karolina/Nowy/EAiIB/magiterka/Thesis/app/src/containers/LogIn/LogIn.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport validate from \"../../components/Validation/Input/Validate\";\nimport TextInput from \"../../components/UI/TextInput/TextInput\";\nimport classes from \"./LogIn.module.css\";\n\nclass LogIn extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      dataIsValid: false,\n      formData: {\n        email: {\n          value: \"\",\n          placeholder: \"name@domain.com\",\n          valid: false,\n          touched: false,\n          validationRules: {\n            isEmail: false,\n            isRequired: true\n          }\n        },\n        password: {\n          value: \"\",\n          placeholder: \"minimum 8 characters\",\n          valid: false,\n          touched: false,\n          validationRules: {\n            minLength: 8,\n            isRequired: true\n          }\n        }\n      }\n    };\n\n    this.submitHandler = event => {\n      // event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const formAuth = {}; // add only the input to send it to DB\n\n      for (let formElementIdentifier in this.state.formData) {\n        formAuth[formElementIdentifier] = this.state.formData[formElementIdentifier].value;\n      }\n    };\n\n    this.changeHandler = event => {\n      console.log(event.target.label);\n      const name = event.target.label;\n      const value = event.target.value;\n      const updatedData = { ...this.state.formData\n      };\n      const updatedDataElement = { ...updatedData[name]\n      };\n      updatedDataElement.value = value;\n      updatedDataElement.touched = true && value !== null;\n      updatedDataElement.valid = validate(value, updatedDataElement.validationRules);\n      updatedData[name] = updatedDataElement;\n      let dataIsValid = true;\n\n      for (let inputIdentifier in updatedData) {\n        dataIsValid = updatedData[inputIdentifier].valid && dataIsValid;\n      }\n\n      this.setState({\n        dataIsValid: dataIsValid,\n        formData: updatedData\n      });\n    };\n  }\n\n  render() {\n    const formElementArray = [];\n\n    for (let key in this.state.formData) {\n      formElementArray.push({\n        id: key,\n        config: this.state.formData[key]\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, \"Log In\")), formElementArray.map(formElement => /*#__PURE__*/React.createElement(TextInput, {\n      key: formElement.id,\n      type: formElement.id,\n      label: formElement.id,\n      value: formElement.config.value,\n      placeholder: formElement.config.placeholder,\n      touched: formElement.config.touched,\n      valid: formElement.config.valid,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.RememberForgotBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, \"Remember Me\"), /*#__PURE__*/React.createElement(Link, {\n      className: classes.ForgotLink,\n      to: \"/recoverpassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, \"Forgot Password?\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.SubmitButton,\n      disabled: !this.state.dataIsValid,\n      onClick: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, \"Log in\")));\n  }\n\n}\n\nexport default LogIn;","map":{"version":3,"sources":["/media/karolina/Nowy/EAiIB/magiterka/Thesis/app/src/containers/LogIn/LogIn.js"],"names":["React","Component","Link","validate","TextInput","classes","LogIn","state","loading","dataIsValid","formData","email","value","placeholder","valid","touched","validationRules","isEmail","isRequired","password","minLength","submitHandler","event","setState","formAuth","formElementIdentifier","changeHandler","console","log","target","label","name","updatedData","updatedDataElement","inputIdentifier","render","formElementArray","key","push","id","config","Form","map","formElement","RememberForgotBox","ForgotLink","SubmitButton"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport validate from \"../../components/Validation/Input/Validate\";\nimport TextInput from \"../../components/UI/TextInput/TextInput\";\nimport classes from \"./LogIn.module.css\";\n\nclass LogIn extends Component {\n  state = {\n    loading: false,\n    dataIsValid: false,\n    formData: {\n      email: {\n        value: \"\",\n        placeholder: \"name@domain.com\",\n        valid: false,\n        touched: false,\n        validationRules: { isEmail: false, isRequired: true },\n      },\n      password: {\n        value: \"\",\n        placeholder: \"minimum 8 characters\",\n        valid: false,\n        touched: false,\n        validationRules: { minLength: 8, isRequired: true },\n      },\n    },\n  };\n\n  submitHandler = (event) => {\n    // event.preventDefault();\n    this.setState({ loading: true });\n    const formAuth = {};\n    // add only the input to send it to DB\n    for (let formElementIdentifier in this.state.formData) {\n      formAuth[formElementIdentifier] = this.state.formData[\n        formElementIdentifier\n      ].value;\n    }\n  };\n\n  changeHandler = (event) => {\n    console.log(event.target.label);\n    const name = event.target.label;\n    const value = event.target.value;\n\n    const updatedData = {\n      ...this.state.formData,\n    };\n\n    const updatedDataElement = {\n      ...updatedData[name],\n    };\n\n    updatedDataElement.value = value;\n    updatedDataElement.touched = true && value !== null;\n    updatedDataElement.valid = validate(\n      value,\n      updatedDataElement.validationRules\n    );\n\n    updatedData[name] = updatedDataElement;\n\n    let dataIsValid = true;\n    for (let inputIdentifier in updatedData) {\n      dataIsValid = updatedData[inputIdentifier].valid && dataIsValid;\n    }\n\n    this.setState({\n      dataIsValid: dataIsValid,\n      formData: updatedData,\n    });\n  };\n\n  render() {\n    const formElementArray = [];\n    for (let key in this.state.formData) {\n      formElementArray.push({ id: key, config: this.state.formData[key] });\n    }\n    return (\n      <div className={classes.Form}>\n        <div>\n          <header>\n            <h1>Log In</h1>\n          </header>\n          {formElementArray.map((formElement) => (\n            <TextInput\n              key={formElement.id}\n              type={formElement.id}\n              label={formElement.id}\n              value={formElement.config.value}\n              placeholder={formElement.config.placeholder}\n              touched={formElement.config.touched}\n              valid={formElement.config.valid}\n              onChange={this.changeHandler}\n            />\n          ))}\n\n          <div className={classes.RememberForgotBox}>\n            <input type=\"checkbox\" />\n            <label>Remember Me</label>\n            <Link className={classes.ForgotLink} to=\"/recoverpassword\">\n              Forgot Password?\n            </Link>\n          </div>\n          <button\n            className={classes.SubmitButton}\n            disabled={!this.state.dataIsValid}\n            onClick={this.submitHandler}\n          >\n            Log in\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LogIn;\n"]},"metadata":{},"sourceType":"module"}